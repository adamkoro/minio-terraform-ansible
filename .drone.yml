kind: pipeline
type: kubernetes
name: terraform

steps:
- name: requirements
  image: registry.suse.com/bci/bci-base:15.4
  environment:
    SSH_PUB_KEY: 
      from_secret: cloud_init_adamkoro_pub_key
    SSH_PRIV_KEY: 
      from_secret: cloud_init_adamkoro_priv_key
    SSH_HOST:
      from_secret: ssh_host
    SSH_TERRAFORM_KEY:
      from_secret: ssh_key
  commands:
    - zypper ref
    - zypper install -y openssh
    - eval $(ssh-agent -s)
    - mkdir -p /root/.ssh
    - echo "$SSH_PUB_KEY" > /root/.ssh/home.pub
    - echo "$SSH_PRIV_KEY" > /root/.ssh/home
    - echo "$SSH_TERRAFORM_KEY" > /root/.ssh/id_rsa
    - ssh-keyscan -H $SSH_HOST >> /root/.ssh/known_hosts
    - curl -Lk https://fileserver.adamkoro.local/terraform_secret/minio_cluster.tfvars > ./terraform/terraform.tfvars
  volumes:
    - name: ssh_data
      path: /root/.ssh

- name: syntax
  image: hashicorp/terraform:1.5.0
  commands:
  - terraform -chdir=./terraform fmt -check -diff -recursive

- name: init
  image: hashicorp/terraform:1.5.0
  commands:
  - terraform -chdir=./terraform init

#- name: plan
#  image: hashicorp/terraform:1.5.0
#  commands:
#  - terraform -chdir=./terraform plan
#  volumes:
#    - name: ssh_data
#      path: /root/.ssh

#- name: git-update
#  image: plugins/git
#  settings:
#    depth: 1
#    tags: true
#    commit: true
#    force: true
#    branch: main
#    repo: 
#      from_secret: GIT_REPO
#    username:
#      from_secret: GIT_USERNAME
#    password:
#      from_secret: GIT_PASSWORD

#- name: ansible-deploy
#  image: ansible/ansible-runner:latest
#  commands:
#  - ansible-playbook -i ansible/inventory/hosts.ini ansible/install.yaml 

volumes:
- name: ssh_data
  temp: {}

trigger:
  branch:
  - main
  event:
  - push
  - pull_request
  - webhook
---
name: deploy
kind: pipeline
type: kubernetes
steps:

- name: test
  image: registry.suse.com/bci/bci-base:15.4
  commands:
  - ls -la /root/.ssh
  volumes:
    - name: ssh_data
      path: /root/.ssh
